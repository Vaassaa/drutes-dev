#                             _____________________  _______________________
#                             ___  __ \__  __ \_  / / /_  /___  ____/_  ___/
#                             __  / / /_  /_/ /  / / /_  __/_  __/  _____ \ 
#                             _  /_/ /_  _, _// /_/ / / /_ _  /___  ____/ / 
#                             /_____/ /_/ |_| \____/  \__/ /_____/  /____/  
#                                                                           
# 
#---------------------------------------------D R U t E S-----------------------------------------
#                             (Dual Richards' Unsaturated Equation Solver)
#
#------------------------- d r u t e s . c o n f / freeze/ freeze . c o n f -------------------
#-------------------------------------------------------------------------------------------------
#


# number of layers (must be the same as defined for your mesh)
3
#

# Select Materials for each layer
# 1 - Soil
# 2 - Snow 

Snow
Snow
Snow



# Apply freezing point depression according to Dall amico (2011), but without approximation
# Options:
# 1 - Use freezing point depression
# 0 - Do not use freezing point depression
1

# NE freezing rates 
# Set beta_freeze
100
# Set beta_melt
100

# Impedance factor (real)

0


##################################################################
#################### Water flow ##############################
##################################################################

# include flux due to temperature (e.g. qlT in saito et al 2006 or hansson et al 2004)
# Options:
# 1 - yes
# 0 - no 
1

# van Genuchten parameters, l is set to 0.5                                         	               
#      alpha [L-1]  |    n   |    m       | theta_r    | theta_s  
#-----------------------------------------1st layer------------------------------------------------- 
8.635832	3.540358	0.7175427	0	0.553
13.127489	3.72168	0.7313041	0	0.6183206
13.70708	3.544491	0.7178721	0	0.75027



# Saturated Hydraulic conductivity
#anisothprophy description
# HINT: check number of records of anisothropy description in water.conf/matrix.conf!!
#       for 3D problem you must specify exactly Kxx, Kyy and Kzz values.
#       Obviously for 2D problem there must be exactly only Kxx and Kzz value, analogicaly for 1D problem
#        for 2D problem supply only 1 angle, for 3D problem supply 2 angles, and for 1D problem the angle value defines the angle between the VERTICAL and the flow trajectory (carefull some other 
#        softwares consider HORIZONTAL!!
#angle [degrees]  | K_11   |  K_22   | K_33
#-----------------------------------------------
0	0.00575594
0	0.01614049
0	0.02150043




# initial condition specified for each layer
# number of records must be equal to number of layers

# init. cond [real] | type of init. cond (hpres, H_tot, theta) 
##-------------------------------------------------------------------------

-1 hpres
-1 hpres
-1 hpres



##################################################################
#################### water bc description ##############################
##################################################################

# number of boundaries (for 1D problem obviously not more then 2)
2
#list boundaries

# ID starts at 100 (for 1D problem 121 = bottom boundary, 122 = top boundary)
# available boundary types
# 0 - no bc for this domain
# 1 - Dirichlet boundary
# -1 - Dirichlet boundary, the pressure is equal to vertical distance from the defined value
# 2 - Neumann boundary (e.g. rain)
# 3 - Free Drainage
# 4 - Seepage Face
# 5 - atmospheric boundary

# boundary ID       boundary type       use rain.dat [y/n]   value          
#----------------------------------------------------------------------------------------------------------------------------
121                       4                   n                	-0.99999    
122                       2                  y                	0.136


#################### ICE initial description ##############################

# initial condition specified for each layer
# number of records must be equal to number of layers

# init. cond [real] | type of init. cond (hpres, H_tot, theta) 
##------------------------------------------------------------------------------

0.447	theta
0.3816794	theta
0.24973	theta



#################### ICE bc description ##############################

# number of boundaries (for 1D problem obviously not more then 2)
2
#list boundaries

# ID starts at 100 (for 1D problem 101 = bottom boundary, 102 = top boundary)
# available boundary types
# 0 - no bc for this domain
# 1 - Dirichlet boundary
# -1 - Dirichlet boundary, the pressure is equal to vertical distance from the defined value
# 2 - Neumann boundary (e.g. rain)
# 3 - Free Drainage
# 4 - Seepage Face
# 5 - atmospheric boundary

# boundary ID       boundary type       use rain.dat [y/n]   value          
#----------------------------------------------------------------------------------------------------------------------------
101                       2                   n                	0    
102                       2                  n                	0
