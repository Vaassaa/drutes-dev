#                             _____________________  _______________________
#                             ___  __ \__  __ \_  / / /_  /___  ____/_  ___/
#                             __  / / /_  /_/ /  / / /_  __/_  __/  _____ \ 
#                             _  /_/ /_  _, _// /_/ / / /_ _  /___  ____/ / 
#                             /_____/ /_/ |_| \____/  \__/ /_____/  /____/  
#                                                                           
# 
#---------------------------------------------D R U t E S-----------------------------------------
#                             (Dual Richards' Unsaturated Equation Solver)
#
#--------------------d r u t e s . c o n f / w a t e r . c o n f / m a t r i x . c o n f ---------
#-------------------------------------------------------------------------------------------------
#
#


#---how-to use constitutive relations? [integer]
# 0 - direct evaluation (not recommended, extremely resources consuming due to complicated exponential functions)
# 1 - function values are precalculated in program initialization and values between are linearly approximated

1

#length of interval for precaculating the constitutive functions (!) (starting at zero)
700.0 

#discretization step for constitutive function precalculation
0.1

# amount of soil layers [integer]
8


#van genuchten porous medium parameters, if 1D specify the layer elevation                                          	               
#      alfa [L-1]  |    n   |    m       | theta_r    | theta_s  |   specific storage    |
#-----------------------------------------1st layer------------------------------------------------- 
#     silty clay
0.2015	4.28214111672409	0.766471965135746	0	0.689	0
0.1796	4.60134685976128	0.782672328238284	0	0.681	0
0.1285	5.2075122127533	0.807969725437997	0	0.720	0
0.1066	5.77068412657364	0.826710320983423	0	0.725	0
0.092	6.71827903036997	0.851152356804547	0	0.691	0
0.0555	6.72907174669977	0.85139109261386	0	0.845	0
0.0482	5.58651840803021	0.820997636280483	0	0.914	0
0.0409	5.137056969687	0.805336011280223	0	0.945	0




#anisothprophy description
# HINT: check number of records of anisothropy description in water.conf/matrix.conf!!
#       for 3D problem you must specify exactly Kxx, Kyy and Kzz values.
#       Obviously for 2D problem there must be exactly only Kxx and Kzz value, analogicaly for 1D problem
#        for 2D problem supply only 1 angle, for 3D problem supply 2 angles, and for 1D problem the angle value defines the angle between the VERTICAL and the flow trajectory (carefull some other 
#        softwares consider HORIZONTAL!!
#angle [degrees]  | K_11   |  K_22   | K_33
#-----------------------------------------------
#0.0             	!Ks 
0	5429708.92014148
0	3838150.89724141
0	2815518.84729911
0	1907659.3150753
0	888794.774843825
0	1393448.53015849
0	2026980.32416641
0	1661131.18180404

 


# initial condition specified for each layer, use of RCZA method, if 1D specify the layer elevation
# number of records must be equal to number of layers

# sink(-) /source (+) term per layer
0
0
0
0
0
0
0
0




# init. cond [real] | type of init. cond (hpres, H_tot, theta) |  RCZA method [y/n] [char.] |  RCZA method val. [real]   
##------------------------------------------------------------------------------

0.14                     	theta                       		n		             0
0.0						theta                       		n		             0
0.0                      	theta                       		n		             0
0.0						theta                       		n		             0
0.0                      	theta                       		n		             0
0.0						theta                       		n		             0
0.0                     	theta                       		n		             0
0.03						theta                       		n		             0


##################################################################
#################### bc description ##############################
##################################################################

# number of boundaries (for 1D problem obviously not more then 2)
2
#list boundaries

# ID starts at 100 (for 1D problem 101 = bottom boundary, 102 = top boundary)
# available boundary types
# 0 - no bc for this domain
# 1 - Dirichlet boundary
# -1 - Dirichlet boundary, the pressure is equal to vertical distance from the defined value
# 2 - Neumann boundary (e.g. rain)
# 3 - Free Drainage
# 4 - Seepage Face
# 5 - atmospheric boundary

# boundary ID       boundary type       use rain.dat [y/n]   value          
#----------------------------------------------------------------------------------------------------------------------------
101                       4                   n                	0    
102                       2                   y                	0

