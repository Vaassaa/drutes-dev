#                             _____________________  _______________________
#                             ___  __ \__  __ \_  / / /_  /___  ____/_  ___/
#                             __  / / /_  /_/ /  / / /_  __/_  __/  _____ \ 
#                             _  /_/ /_  _, _// /_/ / / /_ _  /___  ____/ / 
#                             /_____/ /_/ |_| \____/  \__/ /_____/  /____/  
#                                                                           
# 
#---------------------------------------------D R U t E S-----------------------------------------
#                             (Dual Richards' Unsaturated Equation Solver)
#
#--------------------d r u t e s . c o n f / w a t e r . c o n f / m a t r i x . c o n f ---------
#-------------------------------------------------------------------------------------------------
#
#


#---how-to use constitutive relations? [integer]
# 0 - direct evaluation (not recommended, extremely resources consuming due to complicated exponential functions)
# 1 - function values are precalculated in program initialization and values between are linearly approximated

0

#length of interval for precaculating the constitutive functions (!) (starting at zero)
700.0 

#discretization step for constitutive function precalculation
0.1

# amount of soil layers [integer]
9


#van genuchten porous medium parameters, if 1D specify the layer elevation                                          	               
#      alfa [L-1]  |    n   |    m       | theta_r    | theta_s  |   specific storage    |
#-----------------------------------------1st layer------------------------------------------------- 
18.42084457	7.011508601	0.857377341	0	0.630248092	0.0
22.16596006	6.357385353	0.842702629	0	0.563794984	0.0
17.73713861	7.154712999	0.86023199	0	0.679661941	0.0
20.20411919	6.675502984	0.850198554	0	0.563794984	0.0
21.78503886	6.415503128	0.84412758	0	0.752993861	0.0
20.69351573	6.591578132	0.848291262	0	0.77230502	0.0
31.46960079	5.307380461	0.811583133	0	0.81824791	0.0
21.47183276	6.464539021	0.845309929	0	0.802092169	0.0
38.04535218	4.827515692	0.792854117	0	0.849549659	0.0





#anisothprophy description
# HINT: check number of records of anisothropy description in water.conf/matrix.conf!!
#       for 3D problem you must specify exactly Kxx, Kyy and Kzz values.
#       Obviously for 2D problem there must be exactly only Kxx and Kzz value, analogicaly for 1D problem
#        for 2D problem supply only 1 angle, for 3D problem supply 2 angles, and for 1D problem the angle value defines the angle between the VERTICAL and the flow trajectory (carefull some other 
#        softwares consider HORIZONTAL!!
#angle [degrees]  | K_11   |  K_22   | K_33
#-----------------------------------------------
0	0.06
0	0.06
0	0.08
0	0.05
0	0.17
0	0.16
0	0.41
0	0.19
0	0.61


# initial condition specified for each layer, use of RCZA method, if 1D specify the layer elevation
# number of records must be equal to number of layers

# sink(-) /source (+) term per layer
0
0
0
0
0
0
0
0
0


# init. cond [real] | type of init. cond (hpres, H_tot, theta) |  RCZA method [y/n] [char.] |  RCZA method val. [real]   
##------------------------------------------------------------------------------
0.001     theta                     	n		             0
0.001     theta                     	n		             0
0.001    theta 	               n		             0
0.001     theta                     	n		             0
0.001     theta                     	n		             0
0.001    theta 	               n		             0
0.001     theta                     	n		             0
0.001     theta                     	n		             0
0.001    theta 	               n		             0

##################################################################
#################### bc description ##############################
##################################################################

# number of boundaries (for 1D problem obviously not more then 2)
2
#list boundaries

# ID starts at 100 (for 1D problem 101 = bottom boundary, 102 = top boundary)
# available boundary types
# 0 - no bc for this domain
# 1 - Dirichlet boundary
# -1 - Dirichlet boundary, the pressure is equal to vertical distance from the defined value
# 2 - Neumann boundary (e.g. rain)
# 3 - Free Drainage
# 4 - Seepage Face
# 5 - atmospheric boundary

# boundary ID       boundary type       use rain.dat [y/n]   value          
#----------------------------------------------------------------------------------------------------------------------------
101                       4                   n                	0    
102                       2                   y                	0

