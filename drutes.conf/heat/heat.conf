#                             _____________________  _______________________
#                             ___  __ \__  __ \_  / / /_  /___  ____/_  ___/
#                             __  / / /_  /_/ /  / / /_  __/_  __/  _____ \ 
#                             _  /_/ /_  _, _// /_/ / / /_ _  /___  ____/ / 
#                             /_____/ /_/ |_| \____/  \__/ /_____/  /____/  
#                                                                           
# 
#---------------------------------------------D R U t E S-----------------------------------------
#                             (Dual Richards' Unsaturated Equation Solver)
#
#------------------------- d r u t e s . c o n f / h e a t / h e a t . c o n f -------------------
#-------------------------------------------------------------------------------------------------
#
#couple with Richards equation (if not, specify convection later in this file)
n

#
# number of layers (must be the same as defined for your mesh)
3
#

#heat capacity of porous medium
# matrix/matrix  
1e6
1e6
1e6   
        

#heat capacity of liquid (if coupled with water flow, otherwise set 0)     
    1e4
   1e4
    1e4     


#anisothprophy description (dispersivity)
# angle [degrees]  | lambda_11   |  lambda_22   | lambda_33
#-----------------------------------------------
  0.0               1.23
  0.0               1.23
  0.0               1.23
  
#convection 
5e1
5e1
5e1
# 0.0
# 0.0
# 0.0
   
#initial temperature
# value    
0.0
0.0
0.0




# heat source 
0.0
25000.0
0.0


##################################################################
#################### bc description ##############################
##################################################################

# number of boundaries (for 1D problem obviously not more then 2)
2

#list boundaries

# ID starts at 100 (for 1D problem 101 = bottom boundary, 102 = top boundary)
# available boundary types
# 0 - no bc for this domain
# 1 - Dirichlet boundary
# 2 - Neumann boundary (typically zero disperion flux (the same as boundary 0))

# boundary ID       boundary type       use bc.dat [y/n]   value          layer       use init. cond.
#											or satisfy the 
#											Neumann cond. [y/n]
#----------------------------------------------------------------------------------------------------------------------------
101                       1                   n                0.0        1              n
102                       1                   n                0.0         1              n
# 103                       1                   n                0.0         1              n
#103                       2                   n                0.0        1              n
# 103                       1                   n                0.0         1              n
